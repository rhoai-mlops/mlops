---
apiVersion: serving.kserve.io/v1beta1
kind: InferenceService
metadata:
  annotations:
    openshift.io/display-name: {{ .Values.name }}
    serving.knative.openshift.io/enablePassthrough: 'true'
    sidecar.istio.io/inject: 'true'
    sidecar.istio.io/rewriteAppHTTPProbers: 'true'
  name: {{ .Values.name }}
  finalizers:
    - inferenceservice.finalizers
  labels:
    networking.knative.dev/visibility: cluster-local
    opendatahub.io/dashboard: 'true'
spec:
  transformer:
    containers:
      - args:
        - '--predictor_host'
        - {{ .Values.name }}-predictor.$(NAMESPACE).svc.cluster.local:8888
        - '--predictor_protocol'
        - v2
        - '--predictor_use_ssl'
        - 'False'
        - '--scaler_file_path'
        - '{{ .Values.model_path }}/{{ .Values.model_version }}/artifacts/scaler.pkl'
        - '--encoder_file_path'
        - '{{ .Values.model_path }}/{{ .Values.model_version }}/artifacts/label_encoder.pkl'
        command:
          - python
          - '-m'
          - music_transformer
        image: quay.io/rlundber/music_transformer:0.16
        name: kserve-container
        resources:
          limits:
            cpu: '1'
            memory: 2Gi
          requests:
            cpu: '1'
            memory: 2Gi
        env:
          - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
        envFrom:
          - secretRef:
            name: {{ .Values.model_s3_secret }}
  predictor:
    maxReplicas: 0
    minReplicas: 1
    model:
      modelFormat:
        name: onnx
        version: '1'
      name: ''
      resources:
        limits:
          cpu: '2'
          memory: 8Gi
        requests:
          cpu: '1'
          memory: 4Gi
      runtime: {{ .Values.name }}
      storage:
        key: {{ .Values.model_s3_secret }}
        path: {{ .Values.model_path }}/{{ .Values.model_version }}
